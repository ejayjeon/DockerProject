version: "3"
services:
  frontend:
    # 개발환경을 위한 Dockerfile 위치
    image: ejayjeon/docker-frontend
    build:
      dockerfile: dockerfile.dev
      context: ./fe
    # 코드 수정 시 node_modules 재로딩 없이 수정된 코드가 반영될 수 있도록 volumes를 설정
    volumes:
      - /app/node_modules
      - ./fe:/app
    stdin_open: true
    # mem_limit: 128m

  nginx:
    restart: always
    image: ejayjeon/docker-nginx
    build:
      dockerfile: dockerfile
      context: ./nginx
    ports:
      - "3000:80"
    # mem_limit: 128,
    links:
      - frontend
      - backend

  backend:
    image: ejayjeon/docker-backend
    build:
      dockerfile: dockerfile.dev
      context: ./be
    container_name: app_be
    volumes:
      - /app/node_modules
      - ./be:/app
    environment:
      MYSQL_HOST: docker-app-mysql.c8lttebgqm9l.ap-northeast-2.rds.amazonaws.com
      # 데이터베이스 엔드포인트
      MYSQL_USER: root
      MYSQL_ROOT_PASSWORD: qwer1234
      MYSQL_DATABASE: app
      MYSQL_PORT: 3306
    # mem_limit: 128m

  # mysql:
  #   build: ./mysql
  #   restart: unless-stopped
  #   container_name: app_db
  #   ports:
  #     - "3306:3306"
  #   volumes:
  #     - ./mysql/mysql_data:/var/lib/mysql
  #     - ./mysql/sql/:/docker-entrypoint-initdb.d/
  #   environment:
  #     MYSQL_HOST: docker-app-mysql.cmok.ap-northeast-2.rds.com
  #     MYSQL_USER: root
  #     MYSQL_ROOT_PASSWORD: qwer1234
  #     MYSQL_DATABASE: app
  #     MYSQL_PORT: 3306
  #   mem_limit: 128m
